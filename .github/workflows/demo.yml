name: Demo Workflow

on:
  issues:
    types: [opened]

permissions:
  issues: write
  contents: read

jobs:
  trigger-demo:
    runs-on: ubuntu-latest
    if: ${{ join(github.event.issue.labels) == '' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Extract Crypto Address
        id: extract
        run: |
          python .github/scripts/extract_address.py "${{ github.event.issue.body }}"

      - name: Get Issue Creator
        id: get_creator
        uses: actions/github-script@v6
        with:
          script: |
            const issue_creator = context.payload.issue.user.login;
            core.setOutput('creator', issue_creator);

      - name: Call Demo Contract
        id: approve
        uses: kudos-ink/approve@v0.0.2
        with:
          ws-provider-url: ${{ vars.WS_PROVIDER_URL }}
          mnemonic-phrase: ${{ secrets.MNEMONIC_PHRASE }}
          contract-address: ${{ vars.CONTRACT_ADDRESS }}
          contract-abi: ${{ vars.ABI }}
          contribution-id: ${{ github.event.issue.number }}
          contributor: ${{ steps.extract.outputs.address}}

      - name: Comment on the Issue
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const blockHash = ${{ steps.approve.outputs.block }};

            // Post a comment mentioning the issue creator & tx hash
            const commentBody = `@${{steps.get_creator.outputs.creator}} - Your contribution has been successfully approved.\nA proof has been registered here: https://test.azero.dev/?rpc=wss%3A%2F%2Fws.test.azero.dev#/explorer/query/${blockHash}`;
            await github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: issue_number,
              body: commentBody
            });

      - name: Close the Issue
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Close the issue
            await github.rest.issues.update({
              owner: owner,
              repo: repo,
              issue_number: issue_number,
              state: 'closed'
            });
