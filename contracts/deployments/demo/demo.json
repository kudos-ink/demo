{
  "source": {
    "hash": "0x8fa7a9a8d267b9f349967405c3cff73005c6a8f6fd6289b03c05b57ca24420c9",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.73.0",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "3.2.0",
      "rust_toolchain": "stable-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "demo",
    "version": "0.0.1",
    "authors": [
      "Kudos Ink! <hello@kudos.ink>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "reward",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          "Constructor that initializes an asset reward for a given workflow"
        ],
        "label": "new",
        "payable": true,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 6
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 3
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 22
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 23
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 21
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 4
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "id",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 9
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted when an `id` is registered by an aspiring contributor."
        ],
        "label": "IdentityRegistered"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "id",
            "type": {
              "displayName": [
                "ContributorId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "contributor",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted when a `contribution` is approved."
        ],
        "label": "ContributionApproval"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "contribution_id",
            "type": {
              "displayName": [
                "ContributorId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "contributor",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "reward",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          }
        ],
        "docs": [
          "Emitted when the reward associated with the `contribution` is claimed."
        ],
        "label": "RewardClaimed"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 8
    },
    "messages": [
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " Register the caller as an aspiring contributor."
        ],
        "label": "register_identity",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x87ebe7fb"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "ContributorId"
              ],
              "type": 4
            }
          },
          {
            "label": "contributor_id",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " Approve contribution. This is triggered by a workflow run."
        ],
        "label": "approve",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x681266a0"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "ContributorId"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Check the ability to claim for a given `contribution_id`."
        ],
        "label": "can_claim",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x268e24c9"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "ContributorId"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Claim reward for a given `contribution_id`."
        ],
        "label": "claim",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xb388803f"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "ContributorId"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "check",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xaf0a4058"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Simply returns the reward amount."
        ],
        "label": "get_reward",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xd759b94d"
      },
      {
        "args": [
          {
            "label": "identity",
            "type": {
              "displayName": [
                "workflow_external",
                "RegisterIdentityInput1"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " Register the caller as an aspiring contributor.",
          "",
          " Constraint(s):",
          " 1. The `id` id should not already be registered.",
          "",
          " A `IdentityRegistered` event is emitted."
        ],
        "label": "Workflow::register_identity",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xeddaa3c6"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "workflow_external",
                "ApproveInput1"
              ],
              "type": 4
            }
          },
          {
            "label": "contributor_id",
            "type": {
              "displayName": [
                "workflow_external",
                "ApproveInput2"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " Approve contribution. This is triggered by a workflow run.",
          "",
          " Constraint(s):",
          " 1. The `contribution_id` should not already be approved.",
          " 2. The `contributor_id` must be registered.",
          "",
          " An `ContributionApproval` event is emitted."
        ],
        "label": "Workflow::approve",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x471895dc"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "workflow_external",
                "CanClaimInput1"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Check the ability to claim for a given `contribution_id`.",
          "",
          " Constraint(s):",
          " 1. A `contribution` must be approved.",
          " 2. The `contribution_id` must be the same as the one in the approved `contribution`.",
          " 3. The caller has to be the contributor of the approved `contribution`.",
          " 4. The claim must be available (marked as false in the claims mapping)."
        ],
        "label": "Workflow::can_claim",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x081ae8d4"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "workflow_external",
                "ClaimInput1"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Claim reward for a given `contribution_id`.",
          "",
          " Constraint(s): Ensure `can_claim`.",
          "",
          " A `RewardClaimed` event is emitted."
        ],
        "label": "Workflow::claim",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x1f5c9aa8"
      },
      {
        "args": [
          {
            "label": "contribution_id",
            "type": {
              "displayName": [
                "workflow_external",
                "CheckInput1"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "Workflow::check",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xc25f8127"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "Ownable::owner",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 17
        },
        "selector": "0x4fa43c8c"
      },
      {
        "args": [
          {
            "label": "new_owner",
            "type": {
              "displayName": [
                "ownable_external",
                "TransferOwnershipInput1"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "Ownable::transfer_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x11f43efd"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "Ownable::renounce_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x5e228753"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "enum": {
                              "dispatchKey": "0x6f713913",
                              "name": "Option",
                              "variants": {
                                "0": {
                                  "fields": [],
                                  "name": "None"
                                },
                                "1": {
                                  "fields": [
                                    {
                                      "layout": {
                                        "leaf": {
                                          "key": "0x6f713913",
                                          "ty": 0
                                        }
                                      },
                                      "name": "0"
                                    }
                                  ],
                                  "name": "Some"
                                }
                              }
                            }
                          },
                          "root_key": "0x6f713913"
                        }
                      },
                      "name": "owner"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "ownable"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 3
                }
              },
              "name": "reward"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x3fa51969",
                              "ty": 4
                            }
                          },
                          "name": "id"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x3fa51969",
                              "ty": 0
                            }
                          },
                          "name": "contributor"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x3fa51969",
                              "ty": 5
                            }
                          },
                          "name": "claimed"
                        }
                      ],
                      "name": "Contribution"
                    }
                  },
                  "root_key": "0x3fa51969"
                }
              },
              "name": "contributions"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x1358a074",
                      "ty": 0
                    }
                  },
                  "root_key": "0x1358a074"
                }
              },
              "name": "identities"
            }
          ],
          "name": "Demo"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 11
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 12
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 13,
                    "typeName": "OwnableError"
                  }
                ],
                "index": 0,
                "name": "OwnableError"
              },
              {
                "index": 1,
                "name": "IdentityAlreadyRegistered"
              },
              {
                "index": 2,
                "name": "ContributionAlreadyApproved"
              },
              {
                "index": 3,
                "name": "NoContributionApprovedYet"
              },
              {
                "index": 4,
                "name": "UnknownContributor"
              },
              {
                "index": 5,
                "name": "UnknownContribution"
              },
              {
                "index": 6,
                "name": "PaymentFailed"
              },
              {
                "index": 7,
                "name": "CallerIsNotContributor"
              },
              {
                "index": 8,
                "name": "ContributionAlreadyClaimed"
              }
            ]
          }
        },
        "path": [
          "demo",
          "traits",
          "workflow",
          "WorkflowError"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "CallerIsNotOwner"
              },
              {
                "index": 1,
                "name": "NewOwnerIsNotSet"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "ownable",
          "OwnableError"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 15
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 12
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 18
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 20
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 13
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 13
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}